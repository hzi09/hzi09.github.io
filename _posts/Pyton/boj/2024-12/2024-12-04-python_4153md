---
title:  "[백준][Python] 4153. 직각삼각형" 

categories: 
    - Python_BOJ
tags: 
    - BOJ
    - Python
    - Bronze Ⅲ

toc: True
toc_sticky: True
---
![image](https://github.com/user-attachments/assets/32319fe8-99e9-4031-b5d1-9f1909b510dc){: .align-center style="width:50%;"}

**Bronze Ⅲ** 
[🔗4153. 직각삼각형](https://www.acmicpc.net/problem/4153)

<h1>📝문제 요약</h1>

<h2>문제 설명</h2> 

과거 이집트인들은 각 변들의 길이가 3, 4, 5인 삼각형이 직각 삼각형인것을 알아냈다. 주어진 세변의 길이로 삼각형이 직각인지 아닌지 구분하시오.


<h2>입력</h2>

입력은 여러개의 테스트케이스로 주어지며 마지막줄에는 0 0 0이 입력된다. 각 테스트케이스는 모두 30,000보다 작은 양의 정수로 주어지며, 각 입력은 변의 길이를 의미한다.

<h2>출력</h2>

각 입력에 대해 직각 삼각형이 맞다면 "right", 아니라면 "wrong"을 출력한다.

<br>

<h1>✏️문제 풀이</h1>


- 피타고라스는 쉬우니까.. $a^2+b^2=c^2$를 사용해서 풀면 되겠다 싶어서 문제를 풀었다.
    - while 문을 사용하였고, a, b, c 값이 다 0이면 `break`를 통해 실행종료
    - 피타고라스 정의가 맞으면 'right', 틀리면 'wrong'로 하였는데..
- ❗틀렸다고 한다.. > 생각해보니까 숫자가 오름차순이 아니면 틀릴 수도..!

    ```python
    while True :
        a, b, c = map(int, input().split())
        if a == 0 and b == 0 and c == 0 :
            break

        elif (a ** 2) + (b ** 2) == (c ** 2) :
            print('right')
        
        else :
            print('wrong')
    ```

- 그래서 오름차순으로 숫자를 정렬하여 문제를 풀었다.
    - 일단 리스트 `s_list`로 숫자를 입력받고 `sotied()` 함수를 사용하여 오름차순으로 정렬하여 리스트 `n_list`에 저장해주었다.
    - 그 다음에는 위와 똑같은 방법인데, 여기서는 리스트이기 때문에 인덱스를 사용하여 문제를 풀어 주었다.


<br>

<h1>💯제출 코드</h1>

```python
while True :
    s_list = list(map(int, input().split()))
    n_list = sorted(s_list)
    
    if n_list[0] == 0 and  n_list[1] == 0 and n_list[2] == 0:
        break
    elif (n_list[0] ** 2) + (n_list[1] ** 2) == (n_list[2] ** 2) :
        print('right')
    else :
        print('wrong')
```